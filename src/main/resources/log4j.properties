# #配置根Logger #
log4j.rootLogger=info,stdout,byDay,byHour

# 输出到控制台 #
log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.Target=System.out
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern=%d{yyy-MM-dd HH\:mm\:ss} %5p - %m%n

# 分时段将 dao 下的日志保存到 xxx.log文件下

# report-datadao #
# log4j.logger可以设置不同package的日志输出级别
# 语法为: log4j.logger.packageName=level
# 其中, packageName为实际的包名;level为日志级别,可以设置多个包级别日志;
#log4j.logger.com.xxx.xxx.report.dao.dataDao=DEBUG
log4j.logger.com.xxx.xxx.report.dao.dataDao=DEBUG
log4j.appender.byDay=org.apache.log4j.DailyRollingFileAppender
### 日志文件存储路径
log4j.appender.byDay.File=logs/report-dataDao.log 
log4j.appender.byDay.layout=org.apache.log4j.PatternLayout
log4j.appender.byDay.layout.ConversionPattern=%-d{yyyy-MM-dd HH\:mm\:ss} %c{1}.%M(%L) [%p] %m%n

# 将日志以小时保存
# 保存后,文件名为 info.log.2019-10-25-13(表示13时日志)  info.log.2019-10-25-14(表示14时日志)
log4j.appender.byHour=org.apache.log4j.DailyRollingFileAppender
log4j.appender.byHour.file=log/info.log
log4j.appender.byHour.DatePattern='.'yyyy-MM-dd-HH
log4j.appender.byHour.Append=true
log4j.appender.byHour.Threshold=INFO
log4j.appender.byHour.layout=org.apache.log4j.PatternLayout
log4j.appender.byHour.layout.ConversionPattern=[%d{yyyy-MM-dd HH:mm:ss}] [%-5p] [%m] - [%l] %3x %n
log4j.appender.byHour.filter.myRange=org.apache.log4j.varia.LevelRangeFilter
log4j.appender.byHour.filter.myRange.levelMax=INFO
log4j.appender.byHour.filter.myRange.levelMin=INFO